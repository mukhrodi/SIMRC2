{
  "version": 3,
  "sources": ["../../react-tailwindcss-select/src/constants/index.ts", "../../react-tailwindcss-select/src/hooks/use-onclick-outside.ts", "../../react-tailwindcss-select/src/components/Icons.tsx", "../../react-tailwindcss-select/src/components/SelectProvider.tsx", "../../react-tailwindcss-select/src/components/DisabledItem.tsx", "../../react-tailwindcss-select/src/components/Item.tsx", "../../react-tailwindcss-select/src/components/GroupItem.tsx", "../../react-tailwindcss-select/src/components/Options.tsx", "../../react-tailwindcss-select/src/components/SearchInput.tsx", "../../react-tailwindcss-select/src/components/Spinner.tsx", "../../react-tailwindcss-select/src/components/Select.tsx"],
  "sourcesContent": ["export const COLORS = [\n    \"blue\",\n    \"orange\",\n    \"yellow\",\n    \"red\",\n    \"purple\",\n    \"amber\",\n    \"lime\",\n    \"green\",\n    \"emerald\",\n    \"teal\",\n    \"cyan\",\n    \"sky\",\n    \"violet\",\n    \"indigo\",\n    \"purple\",\n    \"fuchsia\",\n    \"pink\",\n    \"rose\"\n];\n\nexport const DEFAULT_THEME = \"blue\";\n\nexport const THEME_DATA = {\n    bg: {\n        blue: \"bg-blue-500\",\n        orange: \"bg-orange-500\",\n        yellow: \"bg-yellow-500\",\n        red: \"bg-red-500\",\n        purple: \"bg-purple-500\",\n        amber: \"bg-amber-500\",\n        lime: \"bg-lime-500\",\n        green: \"bg-green-500\",\n        emerald: \"bg-emerald-500\",\n        teal: \"bg-teal-500\",\n        cyan: \"bg-cyan-500\",\n        sky: \"bg-sky-500\",\n        indigo: \"bg-indigo-500\",\n        violet: \"bg-violet-500\",\n        fuchsia: \"bg-fuchsia-500\",\n        pink: \"bg-pink-500\",\n        rose: \"bg-rose-500\"\n    },\n    bgHover: {\n        blue: \"hover:bg-blue-100\",\n        orange: \"hover:bg-orange-100\",\n        yellow: \"hover:bg-yellow-100\",\n        red: \"hover:bg-red-100\",\n        purple: \"hover:bg-purple-100\",\n        amber: \"hover:bg-amber-100\",\n        lime: \"hover:bg-lime-100\",\n        green: \"hover:bg-green-100\",\n        emerald: \"hover:bg-emerald-100\",\n        teal: \"hover:bg-teal-100\",\n        cyan: \"hover:bg-cyan-100\",\n        sky: \"hover:bg-sky-100\",\n        indigo: \"hover:bg-indigo-100\",\n        violet: \"hover:bg-violet-100\",\n        fuchsia: \"hover:bg-fuchsia-100\",\n        pink: \"hover:bg-pink-100\",\n        rose: \"hover:bg-rose-100\"\n    },\n    ring: {\n        blue: \"focus:ring-blue-500/20\",\n        orange: \"focus:ring-orange-500/20\",\n        yellow: \"focus:ring-yellow-500/20\",\n        red: \"focus:ring-red-500/20\",\n        purple: \"focus:ring-purple-500/20\",\n        amber: \"focus:ring-amber-500/20\",\n        lime: \"focus:ring-lime-500/20\",\n        green: \"focus:ring-green-500/20\",\n        emerald: \"focus:ring-emerald-500/20\",\n        teal: \"focus:ring-teal-500/20\",\n        cyan: \"focus:ring-cyan-500/20\",\n        sky: \"focus:ring-sky-500/20\",\n        indigo: \"focus:ring-indigo-500/20\",\n        violet: \"focus:ring-violet-500/20\",\n        fuchsia: \"focus:ring-fuchsia-500/20\",\n        pink: \"focus:ring-pink-500/20\",\n        rose: \"focus:ring-rose-500/20\"\n    },\n    borderFocus: {\n        blue: \"focus:border-blue-500\",\n        orange: \"focus:border-orange-500\",\n        yellow: \"focus:border-yellow-500\",\n        red: \"focus:border-red-500\",\n        purple: \"focus:border-purple-500\",\n        amber: \"focus:border-amber-500\",\n        lime: \"focus:border-lime-500\",\n        green: \"focus:border-green-500\",\n        emerald: \"focus:border-emerald-500\",\n        teal: \"focus:border-teal-500\",\n        cyan: \"focus:border-cyan-500\",\n        sky: \"focus:border-sky-500\",\n        indigo: \"focus:border-indigo-500\",\n        violet: \"focus:border-violet-500\",\n        fuchsia: \"focus:border-fuchsia-500\",\n        pink: \"focus:border-pink-500\",\n        rose: \"focus:border-rose-500\"\n    },\n    text: {\n        blue: \"text-blue-500\",\n        orange: \"text-orange-500\",\n        yellow: \"text-yellow-500\",\n        red: \"text-red-500\",\n        purple: \"text-purple-500\",\n        amber: \"text-amber-500\",\n        lime: \"text-lime-500\",\n        green: \"text-green-500\",\n        emerald: \"text-emerald-500\",\n        teal: \"text-teal-500\",\n        cyan: \"text-cyan-500\",\n        sky: \"text-sky-500\",\n        indigo: \"text-indigo-500\",\n        violet: \"text-violet-500\",\n        fuchsia: \"text-fuchsia-500\",\n        pink: \"text-pink-500\",\n        rose: \"text-rose-500\"\n    },\n    textHover: {\n        blue: \"hover:text-blue-500\",\n        orange: \"hover:text-orange-500\",\n        yellow: \"hover:text-yellow-500\",\n        red: \"hover:text-red-500\",\n        purple: \"hover:text-purple-500\",\n        amber: \"hover:text-amber-500\",\n        lime: \"hover:text-lime-500\",\n        green: \"hover:text-green-500\",\n        emerald: \"hover:text-emerald-500\",\n        teal: \"hover:text-teal-500\",\n        cyan: \"hover:text-cyan-500\",\n        sky: \"hover:text-sky-500\",\n        indigo: \"hover:text-indigo-500\",\n        violet: \"hover:text-violet-500\",\n        fuchsia: \"hover:text-fuchsia-500\",\n        pink: \"hover:text-pink-500\",\n        rose: \"hover:text-rose-500\"\n    }\n};\n", "import React, { useEffect } from \"react\";\n\nexport default function useOnClickOutside(\n    ref: React.RefObject<HTMLDivElement>,\n    handler: (e?: MouseEvent | TouchEvent) => void\n) {\n    useEffect(() => {\n        const listener = (event: MouseEvent | TouchEvent) => {\n            if (!ref.current || ref.current.contains(event.target as Node)) {\n                return;\n            }\n\n            handler(event);\n        };\n\n        document.addEventListener(\"mousedown\", listener);\n        document.addEventListener(\"touchstart\", listener);\n\n        return () => {\n            document.removeEventListener(\"mousedown\", listener);\n            document.removeEventListener(\"touchstart\", listener);\n        };\n    }, [ref, handler]);\n}\n", "import React from \"react\";\n\ninterface Props {\n    className?: string;\n}\n\nexport const CloseIcon: React.FC<Props> = ({ className = \"\" }) => {\n    return (\n        <svg\n            className={className}\n            fill=\"currentColor\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n        >\n            <path\n                fillRule=\"evenodd\"\n                d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                clipRule=\"evenodd\"\n            />\n        </svg>\n    );\n};\n\nexport const ChevronIcon: React.FC<Props> = ({ className = \"\" }) => {\n    return (\n        <svg\n            className={className}\n            fill=\"currentColor\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n        >\n            <path\n                fillRule=\"evenodd\"\n                d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n                clipRule=\"evenodd\"\n            />\n        </svg>\n    );\n};\n\nexport const SearchIcon: React.FC<Props> = ({ className = \"\" }) => {\n    return (\n        <svg\n            className={className}\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n        >\n            <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n            />\n        </svg>\n    );\n};\n", "import React, { createContext, useContext, useMemo } from \"react\";\n\nimport { ClassNames, GroupOption, Option } from \"./type\";\n\ninterface Store {\n    value: Option | Option[] | null;\n    handleValueChange: (selected: Option) => void;\n    formatGroupLabel: ((data: GroupOption) => JSX.Element) | null;\n    formatOptionLabel: ((data: Option) => JSX.Element) | null;\n    classNames?: ClassNames;\n}\n\ninterface Props {\n    value: Option | Option[] | null;\n    handleValueChange: (selected: Option) => void;\n    children: JSX.Element;\n    otherData: {\n        formatGroupLabel: ((data: GroupOption) => JSX.Element) | null;\n        formatOptionLabel: ((data: Option) => JSX.Element) | null;\n        classNames?: ClassNames;\n    };\n}\n\nexport const SelectContext = createContext<Store>({\n    value: null,\n    handleValueChange: selected => {\n        console.log(\"selected:\", selected);\n    },\n    formatGroupLabel: null,\n    formatOptionLabel: null,\n    classNames: undefined\n});\n\nexport const useSelectContext = (): Store => {\n    return useContext(SelectContext);\n};\n\nconst SelectProvider: React.FC<Props> = ({ value, handleValueChange, otherData, children }) => {\n    const store = useMemo(() => {\n        return {\n            value,\n            handleValueChange,\n            formatGroupLabel:\n                otherData && typeof otherData.formatGroupLabel === \"function\"\n                    ? otherData.formatGroupLabel\n                    : null,\n            formatOptionLabel:\n                otherData && typeof otherData.formatOptionLabel === \"function\"\n                    ? otherData.formatOptionLabel\n                    : null,\n            classNames: otherData?.classNames || undefined\n        };\n    }, [handleValueChange, otherData, value]);\n\n    return <SelectContext.Provider value={store}>{children}</SelectContext.Provider>;\n};\n\nexport default SelectProvider;\n", "import React, { useContext } from \"react\";\n\nimport { SelectContext } from \"./SelectProvider\";\n\ninterface DisabledItemProps {\n    children: JSX.Element | string;\n}\n\nconst DisabledItem: React.FC<DisabledItemProps> = ({ children }) => {\n    const { classNames } = useContext(SelectContext);\n    return (\n        <div\n            className={\n                classNames && classNames.listDisabledItem\n                    ? classNames.listDisabledItem\n                    : \"px-2 py-2 cursor-not-allowed truncate text-gray-400 select-none\"\n            }\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default DisabledItem;\n", "import React, { useCallback, useMemo } from \"react\";\n\nimport { COLORS, DEFAULT_THEME, THEME_DATA } from \"../constants\";\n\nimport DisabledItem from \"./DisabledItem\";\nimport { useSelectContext } from \"./SelectProvider\";\nimport { Option } from \"./type\";\n\ninterface ItemProps {\n    item: Option;\n    primaryColor: string;\n}\n\nconst Item: React.FC<ItemProps> = ({ item, primaryColor }) => {\n    const { classNames, value, handleValueChange, formatOptionLabel } = useSelectContext();\n\n    const isSelected = useMemo(() => {\n        return value !== null && !Array.isArray(value) && value.value === item.value;\n    }, [item.value, value]);\n\n    const textHoverColor = useMemo(() => {\n        if (COLORS.includes(primaryColor)) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            return THEME_DATA.textHover[primaryColor];\n        }\n        return THEME_DATA.textHover[DEFAULT_THEME];\n    }, [primaryColor]);\n\n    const bgColor = useMemo(() => {\n        if (COLORS.includes(primaryColor)) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            return THEME_DATA.bg[primaryColor];\n        }\n        return THEME_DATA.bg[DEFAULT_THEME];\n    }, [primaryColor]);\n\n    const bgHoverColor = useMemo(() => {\n        if (COLORS.includes(primaryColor)) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            return THEME_DATA.bgHover[primaryColor];\n        }\n        return THEME_DATA.bgHover[DEFAULT_THEME];\n    }, [primaryColor]);\n\n    const getItemClass = useCallback(() => {\n        const baseClass =\n            \"block transition duration-200 px-2 py-2 cursor-pointer select-none truncate rounded\";\n        const selectedClass = isSelected\n            ? `text-white ${bgColor}`\n            : `text-gray-500 ${bgHoverColor} ${textHoverColor}`;\n\n        return classNames && classNames.listItem\n            ? classNames.listItem({ isSelected })\n            : `${baseClass} ${selectedClass}`;\n    }, [bgColor, bgHoverColor, classNames, isSelected, textHoverColor]);\n\n    return (\n        <>\n            {formatOptionLabel ? (\n                <div onClick={() => handleValueChange(item)}>\n                    {formatOptionLabel({ ...item, isSelected })}\n                </div>\n            ) : (\n                <>\n                    {item.disabled ? (\n                        <DisabledItem>{item.label}</DisabledItem>\n                    ) : (\n                        <li\n                            aria-selected={isSelected}\n                            role={\"option\"}\n                            onClick={() => handleValueChange(item)}\n                            className={getItemClass()}\n                        >\n                            {item.label}\n                        </li>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default Item;\n", "import React from \"react\";\n\nimport Item from \"./Item\";\nimport { useSelectContext } from \"./SelectProvider\";\nimport { GroupOption } from \"./type\";\n\ninterface GroupItemProps {\n    item: GroupOption;\n    primaryColor: string;\n}\n\nconst GroupItem: React.FC<GroupItemProps> = ({ item, primaryColor }) => {\n    const { classNames, formatGroupLabel } = useSelectContext();\n\n    return (\n        <>\n            {item.options.length > 0 && (\n                <>\n                    {formatGroupLabel ? (\n                        <>{formatGroupLabel(item)}</>\n                    ) : (\n                        <div\n                            className={\n                                classNames && classNames.listGroupLabel\n                                    ? classNames.listGroupLabel\n                                    : \"pr-2 py-2 cursor-default select-none truncate font-bold text-gray-700\"\n                            }\n                        >\n                            {item.label}\n                        </div>\n                    )}\n\n                    {item.options.map((item, index) => (\n                        <Item primaryColor={primaryColor} key={index} item={item} />\n                    ))}\n                </>\n            )}\n        </>\n    );\n};\n\nexport default GroupItem;\n", "import React, { useCallback, useContext, useMemo } from \"react\";\n\nimport { DEFAULT_THEME } from \"../constants\";\n\nimport DisabledItem from \"./DisabledItem\";\nimport GroupItem from \"./GroupItem\";\nimport Item from \"./Item\";\nimport { SelectContext } from \"./SelectProvider\";\nimport { Option, Options as ListOption } from \"./type\";\n\ninterface OptionsProps {\n    list: ListOption;\n    noOptionsMessage: string;\n    text: string;\n    isMultiple: boolean;\n    value: Option | Option[] | null;\n    primaryColor: string;\n}\n\nconst Options: React.FC<OptionsProps> = ({\n    list,\n    noOptionsMessage,\n    text,\n    isMultiple,\n    value,\n    primaryColor = DEFAULT_THEME\n}) => {\n    const { classNames } = useContext(SelectContext);\n    const filterByText = useCallback(() => {\n        const filterItem = (item: Option) => {\n            return item.label.toLowerCase().indexOf(text.toLowerCase()) > -1;\n        };\n\n        let result = list.map(item => {\n            if (\"options\" in item) {\n                return {\n                    label: item.label,\n                    options: item.options.filter(filterItem)\n                };\n            }\n            return item;\n        });\n\n        result = result.filter(item => {\n            if (\"options\" in item) {\n                return item.options.length > 0;\n            }\n            return filterItem(item);\n        });\n\n        return result;\n    }, [text, list]);\n\n    const removeValues = useCallback(\n        (array: ListOption) => {\n            if (!isMultiple) {\n                return array;\n            }\n\n            if (Array.isArray(value)) {\n                const valueId = value.map(item => item.value);\n\n                const filterItem = (item: Option) => !valueId.includes(item.value);\n\n                let newArray = array.map(item => {\n                    if (\"options\" in item) {\n                        return {\n                            label: item.label,\n                            options: item.options.filter(filterItem)\n                        };\n                    }\n                    return item;\n                });\n\n                newArray = newArray.filter(item => {\n                    if (\"options\" in item) {\n                        return item.options.length > 0;\n                    } else {\n                        return filterItem(item);\n                    }\n                });\n\n                return newArray;\n            }\n            return array;\n        },\n        [isMultiple, value]\n    );\n\n    const filterResult = useMemo(() => {\n        return removeValues(filterByText());\n    }, [filterByText, removeValues]);\n\n    return (\n        <div\n            role=\"options\"\n            className={\n                classNames && classNames.list\n                    ? classNames.list\n                    : \"max-h-72 overflow-y-auto overflow-y-scroll\"\n            }\n        >\n            {filterResult.map((item, index) => (\n                <React.Fragment key={index}>\n                    {\"options\" in item ? (\n                        <>\n                            <div className=\"px-2.5\">\n                                <GroupItem\n                                    primaryColor={primaryColor || DEFAULT_THEME}\n                                    item={item}\n                                />\n                            </div>\n\n                            {index + 1 < filterResult.length && <hr className=\"my-1\" />}\n                        </>\n                    ) : (\n                        <div className=\"px-2.5\">\n                            <Item primaryColor={primaryColor || DEFAULT_THEME} item={item} />\n                        </div>\n                    )}\n                </React.Fragment>\n            ))}\n\n            {filterResult.length === 0 && <DisabledItem>{noOptionsMessage}</DisabledItem>}\n        </div>\n    );\n};\n\nexport default Options;\n", "import React, { useContext } from \"react\";\n\nimport { SearchIcon } from \"./Icons\";\nimport { SelectContext } from \"./SelectProvider\";\n\ninterface SearchInputProps {\n    placeholder?: string;\n    value: string;\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n    name?: string;\n}\n\nconst SearchInput: React.FC<SearchInputProps> = ({\n    placeholder = \"\",\n    value = \"\",\n    onChange,\n    name = \"\"\n}) => {\n    const { classNames } = useContext(SelectContext);\n    return (\n        <div\n            className={\n                classNames && classNames.searchContainer\n                    ? classNames.searchContainer\n                    : \"relative py-1 px-2.5\"\n            }\n        >\n            <SearchIcon\n                className={\n                    classNames && classNames.searchIcon\n                        ? classNames.searchIcon\n                        : \"absolute w-5 h-5 mt-2.5 pb-0.5 ml-2 text-gray-500\"\n                }\n            />\n            <input\n                className={\n                    classNames && classNames.searchBox\n                        ? classNames.searchBox\n                        : \"w-full py-2 pl-8 text-sm text-gray-500 bg-gray-100 border border-gray-200 rounded focus:border-gray-200 focus:ring-0 focus:outline-none\"\n                }\n                type=\"text\"\n                placeholder={placeholder}\n                value={value}\n                onChange={onChange}\n                name={name}\n            />\n        </div>\n    );\n};\n\nexport default SearchInput;\n", "import React, { useMemo } from \"react\";\n\nimport { COLORS, DEFAULT_THEME, THEME_DATA } from \"../constants\";\n\ninterface Props {\n    primaryColor?: string;\n}\n\nconst Spinner: React.FC<Props> = ({ primaryColor = DEFAULT_THEME }) => {\n    const spinnerColor = useMemo(() => {\n        if (COLORS.includes(primaryColor)) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            return THEME_DATA.text[primaryColor];\n        }\n        return THEME_DATA.text[DEFAULT_THEME];\n    }, [primaryColor]);\n\n    return (\n        <svg\n            className={`animate-spin mr-0.5 h-5 w-5 ${spinnerColor}`}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n        >\n            <circle\n                className=\"opacity-25\"\n                cx=\"12\"\n                cy=\"12\"\n                r=\"10\"\n                stroke=\"currentColor\"\n                strokeWidth=\"4\"\n            />\n            <path\n                className=\"opacity-75\"\n                fill=\"currentColor\"\n                d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n            />\n        </svg>\n    );\n};\n\nexport default Spinner;\n", "import React, { useCallback, useEffect, useRef, useState } from \"react\";\n\nimport { COLORS, DEFAULT_THEME, THEME_DATA } from \"../constants\";\nimport useOnClickOutside from \"../hooks/use-onclick-outside\";\n\nimport { ChevronIcon, CloseIcon } from \"./Icons\";\nimport Options from \"./Options\";\nimport SearchInput from \"./SearchInput\";\nimport SelectProvider from \"./SelectProvider\";\nimport Spinner from \"./Spinner\";\nimport { GroupOption, Option, Options as ListOption } from \"./type\";\n\ninterface SelectProps {\n    options: ListOption;\n    value: Option | Option[] | null;\n    onChange: (value?: Option | Option[] | null) => void;\n    placeholder?: string;\n    isMultiple?: boolean;\n    isClearable?: boolean;\n    isSearchable?: boolean;\n    isDisabled?: boolean;\n    loading?: boolean;\n    menuIsOpen?: boolean;\n    searchInputPlaceholder?: string;\n    noOptionsMessage?: string;\n    primaryColor: string;\n    formatGroupLabel?: ((data: GroupOption) => JSX.Element) | null;\n    formatOptionLabel?: ((data: Option) => JSX.Element) | null;\n    classNames?: {\n        menuButton?: ({ isDisabled }: { isDisabled: boolean }) => string;\n        menu?: string;\n        tagItem?: ({ isDisabled }: { isDisabled: boolean }) => string;\n        tagItemText?: string;\n        tagItemIconContainer?: string;\n        tagItemIcon?: string;\n        list?: string;\n        listGroupLabel?: string;\n        listItem?: ({ isSelected }: { isSelected: boolean }) => string;\n        listDisabledItem?: string;\n        ChevronIcon?: ({ open }: { open: boolean }) => string;\n        searchContainer?: string;\n        searchBox?: string;\n        searchIcon?: string;\n        closeIcon?: string;\n    };\n}\n\nconst Select: React.FC<SelectProps> = ({\n    options = [],\n    value = null,\n    onChange,\n    placeholder = \"Select...\",\n    searchInputPlaceholder = \"Search...\",\n    isMultiple = false,\n    isClearable = false,\n    isSearchable = false,\n    isDisabled = false,\n    loading = false,\n    menuIsOpen = false,\n    noOptionsMessage = \"No options found\",\n    primaryColor = DEFAULT_THEME,\n    formatGroupLabel = null,\n    formatOptionLabel = null,\n    classNames\n}) => {\n    const [open, setOpen] = useState<boolean>(menuIsOpen);\n    const [list, setList] = useState<ListOption>(options);\n    const [inputValue, setInputValue] = useState<string>(\"\");\n    const ref = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        const formatItem = (item: Option) => {\n            if (\"disabled\" in item) return item;\n            return {\n                ...item,\n                disabled: false\n            };\n        };\n\n        setList(\n            options.map(item => {\n                if (\"options\" in item) {\n                    return {\n                        label: item.label,\n                        options: item.options.map(formatItem)\n                    };\n                } else {\n                    return formatItem(item);\n                }\n            })\n        );\n    }, [options]);\n\n    const toggle = useCallback(() => {\n        if (!isDisabled) {\n            setOpen(!open);\n        }\n    }, [isDisabled, open]);\n\n    const closeDropDown = useCallback(() => {\n        if (open) setOpen(false);\n    }, [open]);\n\n    useOnClickOutside(ref, () => {\n        closeDropDown();\n    });\n\n    const onPressEnterOrSpace = useCallback(\n        (e: React.KeyboardEvent<HTMLDivElement>) => {\n            e.preventDefault();\n            if ((e.code === \"Enter\" || e.code === \"Space\") && !isDisabled) {\n                toggle();\n            }\n        },\n        [isDisabled, toggle]\n    );\n\n    const handleValueChange = useCallback(\n        (selected: Option) => {\n            function update() {\n                if (!isMultiple && !Array.isArray(value)) {\n                    closeDropDown();\n                    onChange(selected);\n                }\n\n                if (isMultiple && (Array.isArray(value) || value === null)) {\n                    onChange(value === null ? [selected] : [...value, selected]);\n                }\n            }\n\n            if (selected !== value) {\n                update();\n            }\n        },\n        [closeDropDown, isMultiple, onChange, value]\n    );\n\n    const clearValue = useCallback(\n        (e: React.MouseEvent<HTMLDivElement>) => {\n            e.stopPropagation();\n            onChange(null);\n        },\n        [onChange]\n    );\n\n    const removeItem = useCallback(\n        (e: React.MouseEvent<HTMLDivElement>, item: Option) => {\n            if (isMultiple && Array.isArray(value) && value.length) {\n                e.stopPropagation();\n                const result = value.filter(current => item.value !== current.value);\n                onChange(result.length ? result : null);\n            }\n        },\n        [isMultiple, onChange, value]\n    );\n\n    const getSelectClass = useCallback(() => {\n        let ringColor = THEME_DATA.ring[DEFAULT_THEME];\n        if (COLORS.includes(primaryColor)) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            ringColor = THEME_DATA.ring[primaryColor];\n        }\n\n        let borderFocus = THEME_DATA.borderFocus[DEFAULT_THEME];\n        if (COLORS.includes(primaryColor)) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            borderFocus = THEME_DATA.borderFocus[primaryColor];\n        }\n        const baseClass =\n            \"flex text-sm text-gray-500 border border-gray-300 rounded shadow-sm transition-all duration-300 focus:outline-none\";\n        const defaultClass = `${baseClass} ${\n            isDisabled\n                ? \"bg-gray-200\"\n                : `bg-white hover:border-gray-400 ${borderFocus} focus:ring ${ringColor}`\n        }`;\n\n        return classNames && classNames.menuButton\n            ? classNames.menuButton({ isDisabled })\n            : defaultClass;\n    }, [classNames, isDisabled, primaryColor]);\n\n    const getTagItemClass = useCallback(() => {\n        const baseClasse = \"bg-gray-200 border rounded-sm flex space-x-1\";\n        const disabledClass = isDisabled ? \"border-gray-500 px-1\" : \"pl-1\";\n        return classNames && classNames.tagItem\n            ? classNames.tagItem({ isDisabled })\n            : `${baseClasse} ${disabledClass}`;\n    }, [classNames, isDisabled]);\n\n    return (\n        <SelectProvider\n            otherData={{\n                formatGroupLabel,\n                formatOptionLabel,\n                classNames\n            }}\n            value={value}\n            handleValueChange={handleValueChange}\n        >\n            <div className=\"relative w-full\" ref={ref}>\n                <div\n                    tabIndex={0}\n                    aria-expanded={open}\n                    onKeyDown={onPressEnterOrSpace}\n                    onClick={toggle}\n                    className={getSelectClass()}\n                >\n                    <div className=\"grow pl-2.5 py-2 pr-2 flex flex-wrap gap-1\">\n                        {!isMultiple ? (\n                            <p className=\"truncate cursor-default select-none\">\n                                {value && !Array.isArray(value) ? value.label : placeholder}\n                            </p>\n                        ) : (\n                            <>\n                                {value === null && placeholder}\n\n                                {Array.isArray(value) &&\n                                    value.map((item, index) => (\n                                        <div className={getTagItemClass()} key={index}>\n                                            <p\n                                                className={\n                                                    classNames && classNames.tagItemText\n                                                        ? classNames.tagItemText\n                                                        : \"text-gray-600 truncate cursor-default select-none\"\n                                                }\n                                            >\n                                                {item.label}\n                                            </p>\n                                            {!isDisabled && (\n                                                <div\n                                                    onClick={e => removeItem(e, item)}\n                                                    className={\n                                                        classNames &&\n                                                        classNames.tagItemIconContainer\n                                                            ? classNames.tagItemIconContainer\n                                                            : \"flex items-center px-1 cursor-pointer rounded-r-sm hover:bg-red-200 hover:text-red-600\"\n                                                    }\n                                                >\n                                                    <CloseIcon\n                                                        className={\n                                                            classNames && classNames.tagItemIcon\n                                                                ? classNames.tagItemIcon\n                                                                : \"w-3 h-3 mt-0.5\"\n                                                        }\n                                                    />\n                                                </div>\n                                            )}\n                                        </div>\n                                    ))}\n                            </>\n                        )}\n                    </div>\n\n                    <div className=\"flex flex-none items-center py-1.5\">\n                        {loading && (\n                            <div className=\"px-1.5\">\n                                <Spinner primaryColor={primaryColor} />\n                            </div>\n                        )}\n\n                        {isClearable && !isDisabled && value !== null && (\n                            <div className=\"px-1.5 cursor-pointer\" onClick={clearValue}>\n                                <CloseIcon\n                                    className={\n                                        classNames && classNames.closeIcon\n                                            ? classNames.closeIcon\n                                            : \"w-5 h-5 p-0.5\"\n                                    }\n                                />\n                            </div>\n                        )}\n\n                        <div className=\"h-full\">\n                            <span className=\"w-px h-full inline-block text-white bg-gray-300 text-opacity-0\" />\n                        </div>\n\n                        <div className=\"px-1.5\">\n                            <ChevronIcon\n                                className={`transition duration-300 w-6 h-6 p-0.5${\n                                    open ? \" transform rotate-90 text-gray-500\" : \" text-gray-300\"\n                                }`}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n                {open && !isDisabled && (\n                    <div\n                        tabIndex={-1}\n                        className={\n                            classNames && classNames.menu\n                                ? classNames.menu\n                                : \"absolute z-10 w-full bg-white shadow-lg border rounded py-1 mt-1.5 text-sm text-gray-700\"\n                        }\n                    >\n                        {isSearchable && (\n                            <SearchInput\n                                value={inputValue}\n                                placeholder={searchInputPlaceholder}\n                                onChange={e => setInputValue(e.target.value)}\n                            />\n                        )}\n\n                        <Options\n                            list={list}\n                            noOptionsMessage={noOptionsMessage}\n                            text={inputValue}\n                            isMultiple={isMultiple}\n                            value={value}\n                            primaryColor={primaryColor || DEFAULT_THEME}\n                        />\n                    </div>\n                )}\n            </div>\n        </SelectProvider>\n    );\n};\n\nexport default Select;\n"],
  "mappings": "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",
  "names": ["React", "item"]
}
